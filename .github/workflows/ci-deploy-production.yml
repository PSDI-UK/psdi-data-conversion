# Workflow for manually triggering deployment of latest release version to the production cluster in STFC

# It is intended that this workflow be manually triggered after the 'ci-release.yml' job has been shown
# to successfully deploy the latest release version to the staging cluster.

# Note that this workflow will only work if the latest commit in the 'release' branch has a tag,
# because it is the container which shares this tag which will be deployed to the cluster.


name: CI - Deploy to production cluster
run-name: CI - Deploy to production cluster
on:
  workflow_dispatch:

jobs:

  deploy-stfc-production-k8s:
    steps:
    - uses: actions/checkout@v4
      with:
        ref: release
    - name: Setup docker auth
      run: |
        mkdir -p ~/.docker
        cat <<EOF > ~/.docker/config.json
        {
          "auths": {
            "ghcr.io": {
              "auth": "$(echo -n "$GIT_USERNAME:$GIT_PASSWORD" | base64 -w0)"
            }
          }
        }
        EOF
      env: # needed to authenticate to github and download the repo
        GIT_USERNAME: ${{ github.actor }}
        GIT_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
    - name: Get latest tag in the relase branch
      run: |
        TAG=`git tag`
        echo "TAG=$TAG" >> $GITHUB_ENV # Make 'TAG' available in future steps as 'env.TAG'
    - name: Check that the tag is sensible and corresponds to a real container
      run: |
        [ -n "$TAG" ] # Check tag is non-empty string
        docker inspect --type=image ghcr.io/psdi-uk/psdi-data-conversion/data-conversion:${{ env.TAG }}    # Check that the container with this tag exists
    - name: Deploy container with tag to production environment
      uses: ./.github/workflows/job-deploy-k8s.yml # use the callable deploy job
      secrets: inherit # pass all secrets for the environment
      with:
        container_tag: ${{ env.TAG }}
        environment: production
