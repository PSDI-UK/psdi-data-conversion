#
# This action does the following upon a new commit to the 'main' branch:
# 1) Creates a new release containing the repository source code, and tagging the
#    release with an appropriate version number, and publishing it on the Github project
#    page
# 2) Build a container image, tagging the release with an appropriate version number,
#    and publishing it on the Github project page
#
# Notes:
# - The version number is incremented every release as described in
#   https://github.com/mathieudutour/github-tag-action. Note that by default semantic
#   version numbers are used and the patch number is incremented every release.
#   Moreover, in accordance with Angular conventional commits convention, the minor or
#   major number is incremented only upon detection of commits in the history with
#   certain formats. E.g. a commit beginning with 'feat:', signifying a new feature,
#   would result in the minor number being incremented. For details on the expected
#   format of commit messages in this regard see
#   https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular.
#

name: Job - Tag and push container
run-name: Tag and push container

on:
  workflow_call:
    outputs:
      container_tag:
        description: "Container Tag"
        value: ${{ jobs.tag-container-push.outputs.container_tag }}
    
jobs:
  tag-container-push:
    outputs:
      container_tag: ${{ steps.tag_version.outputs.new_tag }}
    runs-on: psdi-uk-runners
    steps:
      - uses: actions/checkout@v4
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: release
          pre_release_branches: rc-*
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
      - name: Setup docker auth
        run: |
          mkdir -p ~/.docker
          cat <<EOF > ~/.docker/config.json
          {
            "auths": {
              "ghcr.io": {
                "auth": "$(echo -n "$GIT_USERNAME:$GIT_PASSWORD" | base64 -w0)"
              }
            }
          }
          EOF
        env: # needed to authenticate to github and download the repo
          GIT_USERNAME: ${{ github.actor }}
          GIT_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker build API
        env:
          IMAGE_NAME: "ghcr.io/psdi-uk/psdi-data-conversion/data-conversion:${{ steps.tag_version.outputs.new_tag }}"
        run: |
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME
